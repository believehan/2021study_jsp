/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-09-10 09:00:39 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _03_multiFileUpload_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	var count = 1;\r\n");
      out.write("	var addCount;\r\n");
      out.write("	\r\n");
      out.write("	//행추가\r\n");
      out.write("	 function addInputBox() {\r\n");
      out.write("		for(var i=1; i<=count; i++) {\r\n");
      out.write("			if(!document.getElementsByName(\"test\" + i)[0]) {\r\n");
      out.write("				addCount=i;\r\n");
      out.write("				break;\r\n");
      out.write("			} else {\r\n");
      out.write("				addCount = count;\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("				\r\n");
      out.write("		var addStr = \"<tr><td width=40><input type=checkbox name=checkList value=\" + addCount +\r\n");
      out.write("						  \"></td><td width=200><input type=file name=test\" + addCount + \"></td></tr>\";\r\n");
      out.write("		var table = document.getElementById(\"dynamic_table\");\r\n");
      out.write("		var newRow = table.insertRow();\r\n");
      out.write("		var newCell = newRow.insertCell();\r\n");
      out.write("		newCell.innerHTML = addStr;\r\n");
      out.write("		count++;\r\n");
      out.write("	} \r\n");
      out.write("	//행 삭제\r\n");
      out.write("	function subtractInputBox() {\r\n");
      out.write("		var table = document.getElementById(\"dynamic_table\");\r\n");
      out.write("		var rows = dynamic_table.rows.length;\r\n");
      out.write("		var chk = 0;\r\n");
      out.write("		if(rows > 1) {\r\n");
      out.write("			for(var i=0; i<document.gForm.checkList.length; i++) {\r\n");
      out.write("				if(document.gForm.checkList[i].checked == true) {\r\n");
      out.write("					table.deleteRow(i);\r\n");
      out.write("					i--;\r\n");
      out.write("					count--;\r\n");
      out.write("					chk++;\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			if(chk <= 0) {\r\n");
      out.write("				alert(\"삭제할 행을 체크해 주세요\");\r\n");
      out.write("			}\r\n");
      out.write("		} else {\r\n");
      out.write("			alert(\"더이상 삭제할 수 없습니다\");\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("	<h4>파일을 업로드 하려면 행 추가 버튼을 누르세요</h4>\r\n");
      out.write("	<input type=\"button\" value=\"행 추가\" onclick=\"javascript:addInputBox();\">&emsp;\r\n");
      out.write("	<input type=\"button\" value=\"행 삭제\" onclick=\"javascript:subtractInputBox();\">\r\n");
      out.write("	<form name=\"gForm\" method=\"post\" enctype=\"multipart/form-data\" action=\"04.multiViewPage.jsp\">\r\n");
      out.write("		<input type=\"hidden\" name=\"count\">\r\n");
      out.write("		<table border=\"1\" id=\"dynamic_table\">\r\n");
      out.write("		</table><P/>\r\n");
      out.write("		<input type=\"submit\" value=\"UPLOAD\">\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
