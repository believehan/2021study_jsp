/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.50
 * Generated at: 2021-10-01 01:00:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.BoardBean;

public final class read_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("board.BoardBean");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      board.BoardMgr bMgr = null;
      bMgr = (board.BoardMgr) _jspx_page_context.getAttribute("bMgr", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (bMgr == null){
        bMgr = new board.BoardMgr();
        _jspx_page_context.setAttribute("bMgr", bMgr, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\r');
      out.write('\n');

	request.setCharacterEncoding("EUC-KR");
	int num = Integer.parseInt(request.getParameter("num"));
	String nowPage = request.getParameter("nowPage");
	String keyField = request.getParameter("keyField");
	String keyWord = request.getParameter("keyWord");
	bMgr.upCount(num);
	BoardBean bean = bMgr.getBoard(num);
	String name = bean.getName();
	String subject = bean.getSubject();
	String regdate = bean.getRegdate();
	String filename = bean.getFilename();
	String content = bean.getContent();
	int filesize = bean.getFilesize();
	String ip = bean.getIp();
	int count = bean.getCount();
	session.setAttribute("bean", bean);

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"EUC-KR\">\r\n");
      out.write("<title>Board Read</title>\r\n");
      out.write("<style>\r\n");
      out.write("	a {text-decoration:none}\r\n");
      out.write("</style>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("	function down(filename) {\r\n");
      out.write("		document.downFrm.filename.value = filename;\r\n");
      out.write("		document.downFrm.submit();\r\n");
      out.write("	}\r\n");
      out.write("	function list() {\r\n");
      out.write("		document.listFrm.submit();\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<body bgcolor=\"#FFD5A2\">\r\n");
      out.write("	<table align=\"center\" width=\"600\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"4\" align=\"center\" height=\"25\" bgcolor=\"#8041D9\"><font color=\"white\">글 읽 기</font></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"center\" bgcolor=\"#D1B2FF\" width=\"15%\" height=\"25\">이름</td>\r\n");
      out.write("			<td bgcolor=\"#E8D9FF\" width=\"35%\">");
      out.print(name );
      out.write("</td>\r\n");
      out.write("			<td align=\"center\" bgcolor=\"#D1B2FF\" width=\"15%\">등록날짜</td>\r\n");
      out.write("			<td bgcolor=\"#E8D9FF\" width=\"35%\">");
      out.print(regdate );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"center\" bgcolor=\"#D1B2FF\" height=\"25\">제목</td>\r\n");
      out.write("			<td colspan=\"3\" bgcolor=\"#E8D9FF\">");
      out.print(subject );
      out.write("</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td align=\"center\" bgcolor=\"#D1B2FF\" height=\"25\">첨부파일</td>\r\n");
      out.write("			<td colspan=\"3\" bgcolor=\"#E8D9FF\">\r\n");
      out.write("				");

					if(filename != null && !filename.equals("")) {
				
      out.write("\r\n");
      out.write("						<a href=\"javascript:down('");
      out.print(filename );
      out.write("')\"> ");
      out.print(filename );
      out.write("</a>&emsp;\r\n");
      out.write("						<font color = \"blue\">(");
      out.print(filesize );
      out.write(" KByte)</font>\r\n");
      out.write("				");
		
					} else {
						out.print("등록된  파일이 없습니다.");
					}
				
      out.write("\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"4\"><br/><pre>");
      out.print(content );
      out.write("</pre></td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"4\" align=\"right\">");
      out.print(ip );
      out.write("로 부터 글을 남기셨습니다 / 조회수 ");
      out.print(count );
      out.write(" </td>\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td colspan=\"4\" align=\"center\"><hr/>\r\n");
      out.write("				[ <a href=\"javascript:list()\">리스트</a> | \r\n");
      out.write("				<a href=\"update.jsp?num=");
      out.print(num );
      out.write("&nowPage=");
      out.print(nowPage );
      out.write("\">수 정</a> | \r\n");
      out.write("				<a href=\"reply.jsp?nowPage=");
      out.print(nowPage );
      out.write("\">답 변</a> | \r\n");
      out.write("				<a href=\"delete.jsp?num=");
      out.print(num );
      out.write("&nowPage=");
      out.print(nowPage );
      out.write("\">삭 제</a> ]\r\n");
      out.write("			</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	<form name=\"downFrm\" method=\"post\" action=\"download.jsp\">\r\n");
      out.write("		<input type=\"hidden\" name=\"filename\">\r\n");
      out.write("	</form>\r\n");
      out.write("	<form name=\"listFrm\" method=\"post\" action=\"list.jsp\">\r\n");
      out.write("		<input type=\"hidden\" name=\"nowPage\" value=\"");
      out.print(nowPage );
      out.write("\">\r\n");
      out.write("		");

			if(!(keyWord==null || keyWord.equals(""))){
		
      out.write("\r\n");
      out.write("			<input type=\"hidden\" name=\"keyField\" value=\"");
      out.print(keyField );
      out.write("\">\r\n");
      out.write("			<input type=\"hidden\" name=\"keyWord\" value=\"");
      out.print(keyWord );
      out.write("\">\r\n");
      out.write("		");

			}
		
      out.write("\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
